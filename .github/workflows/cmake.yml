name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ubuntu:
    strategy:
      matrix:
        build_type: [Release, Debug]

    runs-on: ubuntu-22.04

    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Setup Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.216.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true

    - name: Requirements for GLAD
      run: pip install jinja2

    - name: Requirements for GLFW (Linux)
      run: |
           sudo apt update
           sudo apt install xorg-dev -y
    
    - name: Install Clang/LLVM 14
      run: sudo apt install libclang-dev

    - name: Configure CMake
      env:
        CC: clang-14
        CXX: clang++-14
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}
      
    - name: Store Binary
      uses: actions/upload-artifact@v3.1.0
      with:
        name: ubuntu - ${{ matrix.build_type }}
        path: bin/*

  macos:
    strategy:
      matrix:
        build_type: [Release, Debug]

    runs-on: macos-12

    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Setup Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.216.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true

    - name: Requirements for GLAD
      run: pip install jinja2

    - name: Install Clang/LLVM 15
      run: brew install llvm@15

    - name: Configure CMake
      env:
        CC: /usr/local/opt/llvm/bin/clang
        CXX: /usr/local/opt/llvm/bin/clang++
        LLVM_PATH: /usr/local/opt/llvm/bin
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}
      
    - name: Store Binary
      uses: actions/upload-artifact@v3.1.0
      with:
        name: macos - ${{ matrix.build_type }}
        path: bin/*